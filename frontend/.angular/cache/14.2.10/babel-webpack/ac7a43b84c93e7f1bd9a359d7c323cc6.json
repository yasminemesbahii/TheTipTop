{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\"; //import { style } from '@angular/animations';\n//import { ThrowStmt } from '@angular/compiler';\n\nimport { Component, ViewChild } from '@angular/core';\nimport { NgxWheelComponent, TextOrientation, TextAlignment } from 'projects/ngx-wheel/src/public-api';\nimport moment from 'moment';\nimport swal from \"sweetalert2\";\nlet RoueComponent = class RoueComponent {\n  constructor(route, service) {\n    this.route = route;\n    this.service = service;\n    this.max = 70;\n    this.min = 10;\n    this.totalticket = localStorage.getItem('NombreTickets');\n    this.seed = [...Array(5).keys()];\n    this.conteur1 = localStorage.getItem('counter1');\n    this.conteur2 = localStorage.getItem('counter2');\n    this.conteur3 = localStorage.getItem('counter3');\n    this.conteur4 = localStorage.getItem('counter4');\n    this.conteur5 = localStorage.getItem('counter5');\n    this.Gain = localStorage.getItem('Gain');\n    this.conteurTicket = localStorage.getItem('counterTicket');\n    this.Date = localStorage.getItem('Date');\n    this.given = moment(this.Date, \"YYYY-MM-DD\");\n    this.current = moment().startOf('day');\n    this.iswheelcompleted = false;\n    this.textOrientation = TextOrientation.HORIZONTAL;\n    this.textAlignment = TextAlignment.OUTER;\n    this.iscompleted1 = false;\n    this.iscompleted2 = false;\n    this.iscompleted3 = false;\n    this.iscompleted4 = false;\n    this.iscompleted5 = false;\n  } //res:any=(this.totalticket/100)*60;\n  // Add this ⤵️\n\n\n  ngOnInit() {\n    //this.price=Math.round(Math.random() * (this.max - this.min) + this.min);\n    //this.getPrix()\n    this.delay = moment.duration(this.given.diff(this.current)).asDays();\n    console.log(this.delay); //this.service.loading()\n    //console.log(this.users)\n    //console.log()\n\n    this.idToLandOn = this.seed[Math.round(Math.random() * this.seed.length)];\n    const colors = ['#4c7faf', '#FF0000', '#FF8C00', '#9932CC', '#00FF00'];\n    this.items = this.seed.map(value => ({\n      fillStyle: colors[value % 5],\n      text: `Gain ${value}`,\n      id: value,\n      textFillStyle: 'white',\n      textFontSize: '16'\n    }));\n  }\n\n  calculep(p) {\n    if (p == 60) {\n      return this.totalticket / 100 * p;\n    } else if (p == 20) {\n      return this.totalticket / 100 * p;\n    } else if (p == 10) {\n      return this.totalticket / 100 * p;\n    } else if (p == 6) {\n      return this.totalticket / 100 * p;\n    } else if (p == 4) {\n      return this.totalticket / 100 * p;\n    } else {\n      alert('error');\n    }\n  }\n\n  reset() {\n    this.wheel.reset();\n    location.reload(); //this.load1();\n    // this.load2();\n  }\n  /* before() {\r\n     if(this.conteur1<this.calculep(60)){\r\n     alert(`Ta roue est sur le point de tourner`)\r\n  \n     //console.log(this.res)\r\n     }else\r\n     if(this.conteur2<this.calculep(20)){\r\n       alert(`Ta roue est sur le point de tourner`)\r\n       //console.log(this.res)\r\n     }\r\n     else if(this.conteur3<this.calculep(10)){\r\n       alert(`Ta roue est sur le point de tourner`)\r\n       //console.log(this.res)\r\n     }\r\n     else if(this.conteur4<this.calculep(6)){\r\n       alert(`Ta roue est sur le point de tourner`)\r\n       //console.log(this.res)\r\n     }\r\n     else if(this.conteur5<this.calculep(4)){\r\n       alert(`Ta roue est sur le point de tourner`)\r\n       //console.log(this.res)\r\n     }\r\n     else{\r\n       alert(`s'il vous plais rejouer`)\r\n      // console.log(this.totalticket)\r\n     }\r\n   }*/\n\n\n  spin() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.totalticket != this.conteurTicket && this.delay > 0) {\n        if (this.conteur1 < this.calculep(60) && this.idToLandOn == 0) {\n          yield new Promise(resolve => setTimeout(resolve, 0));\n          this.wheel.spin(this.idToLandOn);\n        } else if (this.conteur2 < this.calculep(20) && this.idToLandOn == 1) {\n          yield new Promise(resolve => setTimeout(resolve, 0));\n          this.wheel.spin(this.idToLandOn);\n        } else if (this.conteur3 < this.calculep(10) && this.idToLandOn == 2) {\n          yield new Promise(resolve => setTimeout(resolve, 0));\n          this.wheel.spin(this.idToLandOn);\n        } else if (this.conteur4 < this.calculep(6) && this.idToLandOn == 3) {\n          yield new Promise(resolve => setTimeout(resolve, 0));\n          this.wheel.spin(this.idToLandOn);\n        } else if (this.conteur5 < this.calculep(4) && this.idToLandOn == 4) {\n          yield new Promise(resolve => setTimeout(resolve, 0));\n          this.wheel.spin(this.idToLandOn);\n        } else {\n          alert('ce gain est remporté deja Rejouez à nouveau!');\n          location.reload(); //this.conteur1=0\n          // this.conteur2=0\n          //this.conteur3=0\n          //this.conteur4=0\n          //this.conteur5=0\n        }\n      } else {\n        alert('Session Terminer!');\n      }\n    });\n  }\n\n  redirecttoaction() {\n    this.route.navigateByUrl('celebration', {\n      skipLocationChange: false\n    });\n  }\n\n  save1() {\n    localStorage.setItem('counter1', this.conteur1.toString());\n  }\n\n  save2() {\n    localStorage.setItem('counter2', this.conteur2.toString());\n  }\n\n  save3() {\n    localStorage.setItem('counter3', this.conteur3.toString());\n  }\n\n  save4() {\n    localStorage.setItem('counter4', this.conteur4.toString());\n  }\n\n  save5() {\n    localStorage.setItem('counter5', this.conteur5.toString());\n  }\n\n  svaeGain() {\n    localStorage.setItem('Gain', this.Gain.toString());\n  }\n\n  saveTicketCounter() {\n    localStorage.setItem('counterTicket', this.conteurTicket.toString());\n  }\n\n  after() {\n    // this.service.iscompleted=true;\n    if (this.idToLandOn == 0) {\n      this.service.iscompleted1 = true; //alert('vous avez gagné un infuseur à thé')\n\n      this.Gain = 'un infuseur à thé';\n      this.svaeGain();\n      this.conteur1++;\n      this.conteurTicket++;\n      this.save1();\n      this.saveTicketCounter(); // this.conteur1++;\n      // console.log(this.conteur1);\n\n      swal.fire('Félicitation', 'vous avez gagné un infuseur à thé', 'info').then(v => {\n        if (v.value) {\n          this.redirecttoaction();\n        }\n      });\n    } else // this.service.iscompleted=true\n      if (this.idToLandOn == 1) {\n        this.service.iscompleted2 = true; //alert('vous avez gagné une boite de 100g dun thé détox ou dinfusion')\n\n        this.Gain = 'une boite de 100g dun thé détox ou dinfusion';\n        this.svaeGain();\n        this.conteur2++;\n        this.conteurTicket++;\n        this.save2();\n        this.saveTicketCounter();\n        swal.fire('Félicitation', 'vous avez gagné une boite de 100g dun thé détox ou dinfusion', 'info').then(v => {\n          if (v.value) {\n            this.redirecttoaction();\n          }\n        }); // console.log(this.conteur2 );\n      } else // this.service.iscompleted=true\n        if (this.idToLandOn == 2) {\n          this.service.iscompleted3 = true; //alert('vous avez gagné une boite de 100g dun thé signature')\n\n          this.Gain = 'une boite de 100g dun thé signature';\n          this.svaeGain();\n          this.conteur3++;\n          this.conteurTicket++;\n          this.save3();\n          this.saveTicketCounter(); //  this.save();\n          // console.log(this.conteur3);\n\n          swal.fire('Félicitation', 'vous avez gagné une boite de 100g dun thé signature', 'info').then(v => {\n            if (v.value) {\n              this.redirecttoaction();\n            }\n          });\n        } else //this.service.iscompleted=true\n          if (this.idToLandOn == 3) {\n            this.service.iscompleted4 = true; //alert('vous avez gagné un coffret découverte dune valeur de 39$')\n\n            this.Gain = 'un coffret découverte dune valeur de 39$';\n            this.svaeGain();\n            this.conteur4++;\n            this.conteurTicket++;\n            this.save4();\n            this.saveTicketCounter(); // this.save();\n            //console.log(this.conteur4);\n\n            swal.fire('Félicitation', 'vous avez gagné un coffret découverte dune valeur de 39$', 'info').then(v => {\n              if (v.value) {\n                this.redirecttoaction();\n              }\n            });\n          } else //this.service.iscompleted=true\n            if (this.idToLandOn == 4) {\n              this.service.iscompleted5 = true; //alert('vous avez gagné un coffret découverte dune valeur de 69$')\n\n              this.Gain = 'un coffret découverte dune valeur de 69$';\n              this.svaeGain(); // this.save();\n\n              this.conteurTicket++;\n              this.conteur5++;\n              this.save5();\n              this.saveTicketCounter(); // console.log(this.conteur5);\n\n              swal.fire('Félicitation', 'vous avez gagné un coffret découverte dune valeur de 69$', 'info').then(v => {\n                if (v.value) {\n                  this.redirecttoaction();\n                }\n              });\n            } //this.iswheelcompleted=true;\n\n  }\n\n};\n\n__decorate([ViewChild(NgxWheelComponent, {\n  static: false\n})], RoueComponent.prototype, \"wheel\", void 0);\n\nRoueComponent = __decorate([Component({\n  selector: 'app-roue',\n  templateUrl: './roue.component.html',\n  styleUrls: ['./roue.component.less']\n})], RoueComponent);\nexport { RoueComponent };","map":null,"metadata":{},"sourceType":"module"}