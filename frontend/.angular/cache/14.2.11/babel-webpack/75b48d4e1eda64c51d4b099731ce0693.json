{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { NgxWheelComponent, TextOrientation, TextAlignment } from 'projects/ngx-wheel/src/public-api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(route) {\n      this.route = route;\n      this.max = 70;\n      this.min = 10;\n      this.totalticket = 50;\n      this.seed = [...Array(5).keys()];\n      this.conteur1 = localStorage.getItem('counter1');\n      this.conteur2 = localStorage.getItem('counter2');\n      this.conteur3 = localStorage.getItem('counter3');\n      this.conteur4 = localStorage.getItem('counter4');\n      this.conteur5 = localStorage.getItem('counter5');\n      this.iswheelcompleted = false;\n      this.textOrientation = TextOrientation.HORIZONTAL;\n      this.textAlignment = TextAlignment.OUTER;\n    } //res:any=(this.totalticket/100)*60;\n\n\n    ngOnInit() {\n      this.price = Math.round(Math.random() * (this.max - this.min) + this.min);\n      this.idToLandOn = this.seed[Math.round(Math.random() * this.seed.length)];\n      const colors = ['#4c7faf', '#FF0000'];\n      this.items = this.seed.map(value => ({\n        fillStyle: colors[value % 2],\n        text: `Gain ${value}`,\n        id: value,\n        textFillStyle: 'white',\n        textFontSize: '16'\n      }));\n    }\n\n    calculep(p) {\n      if (p == 60) {\n        return this.totalticket / 100 * p;\n      } else if (p == 20) {\n        return this.totalticket / 100 * p;\n      } else if (p == 10) {\n        return this.totalticket / 100 * p;\n      } else if (p == 6) {\n        return this.totalticket / 100 * p;\n      } else if (p == 4) {\n        return this.totalticket / 100 * p;\n      } else {\n        alert('error');\n      }\n    }\n\n    reset() {\n      this.wheel.reset();\n      location.reload(); //this.load1();\n      // this.load2();\n    }\n\n    before() {\n      if (this.conteur1 < this.calculep(60)) {\n        alert(`Ta roue est sur le point de tourner`); //console.log(this.res)\n      } else if (this.conteur2 < this.calculep(20)) {\n        alert(`Ta roue est sur le point de tourner`); //console.log(this.res)\n      } else if (this.conteur3 < this.calculep(10)) {\n        alert(`Ta roue est sur le point de tourner`); //console.log(this.res)\n      } else if (this.conteur4 < this.calculep(6)) {\n        alert(`Ta roue est sur le point de tourner`); //console.log(this.res)\n      } else if (this.conteur5 < this.calculep(4)) {\n        alert(`Ta roue est sur le point de tourner`); //console.log(this.res)\n      } else {\n        alert(`s'il vous plais rejouer`); // console.log(this.totalticket)\n      }\n    }\n\n    spin() {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.price >= 49) {\n          if (this.conteur1 < this.calculep(60) && this.idToLandOn == 0) {\n            yield new Promise(resolve => setTimeout(resolve, 0));\n            this.wheel.spin(this.idToLandOn);\n          } else if (this.conteur2 < this.calculep(20) && this.idToLandOn == 1) {\n            yield new Promise(resolve => setTimeout(resolve, 0));\n            this.wheel.spin(this.idToLandOn);\n          } else if (this.conteur3 < this.calculep(10) && this.idToLandOn == 2) {\n            yield new Promise(resolve => setTimeout(resolve, 0));\n            this.wheel.spin(this.idToLandOn);\n          } else if (this.conteur4 < this.calculep(6) && this.idToLandOn == 3) {\n            yield new Promise(resolve => setTimeout(resolve, 0));\n            this.wheel.spin(this.idToLandOn);\n          } else if (this.conteur5 < this.calculep(4) && this.idToLandOn == 4) {\n            yield new Promise(resolve => setTimeout(resolve, 0));\n            this.wheel.spin(this.idToLandOn);\n          } else {\n            alert('ce gain est remporté deja Rejouez à nouveau!');\n            location.reload(); //this.conteur1=0\n            // this.conteur2=0\n            //this.conteur3=0\n            //this.conteur4=0\n            //this.conteur5=0\n          }\n        } else {\n          alert('votre budget est insuffisant il faut depasser 49 euro pour jouer');\n          location.reload();\n        }\n      });\n    }\n\n    redirecttoaction() {\n      this.route.navigateByUrl('celebration', {\n        skipLocationChange: true\n      });\n    }\n\n    save1() {\n      localStorage.setItem('counter1', this.conteur1.toString());\n    }\n\n    save2() {\n      localStorage.setItem('counter2', this.conteur2.toString());\n    }\n\n    save3() {\n      localStorage.setItem('counter3', this.conteur3.toString());\n    }\n\n    save4() {\n      localStorage.setItem('counter4', this.conteur4.toString());\n    }\n\n    save5() {\n      localStorage.setItem('counter5', this.conteur5.toString());\n    }\n\n    after() {\n      if (this.idToLandOn == 0) {\n        alert('vous avez gagné un infuseur à thé');\n        this.conteur1++;\n        this.save1(); // this.conteur1++;\n        // console.log(this.conteur1);\n\n        this.redirecttoaction();\n      } else if (this.idToLandOn == 1) {\n        alert('vous avez gagné une boite de 100g dun thé détox ou dinfusion');\n        this.conteur2++;\n        this.save2();\n        this.redirecttoaction(); // console.log(this.conteur2 );\n      } else if (this.idToLandOn == 2) {\n        alert('vous avez gagné une boite de 100g dun thé signature');\n        this.conteur3++;\n        this.save3(); //  this.save();\n        // console.log(this.conteur3);\n\n        this.redirecttoaction();\n      } else if (this.idToLandOn == 3) {\n        alert('vous avez gagné un offret découverte dune valeur de 39$');\n        this.conteur4++;\n        this.save4(); // this.save();\n        //console.log(this.conteur4);\n\n        this.redirecttoaction();\n      } else if (this.idToLandOn == 4) {\n        alert('vous avez gagné un offret découverte dune valeur de 69$'); // this.save();\n\n        this.conteur5++;\n        this.save5(); // console.log(this.conteur5);\n\n        this.redirecttoaction();\n      } //this.iswheelcompleted=true;\n\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(NgxWheelComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.wheel = _t.first);\n      }\n    },\n    decls: 1,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"router-outlet\");\n      }\n    }\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}